
package ivlev.ivlevback._1c.exchangewithsites;

import jakarta.xml.ws.*;

import javax.xml.namespace.QName;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.1
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "SiteExchange", targetNamespace = "http://www.1c.ru/ExchangeWithSites", wsdlLocation = "file:/Users/habibullinaleyla/IdeaProjects/ivlev-back/src/main/resources/my.wsdl")
public class SiteExchange
    extends Service
{

    private static final URL SITEEXCHANGE_WSDL_LOCATION;
    private static final WebServiceException SITEEXCHANGE_EXCEPTION;
    private static final QName SITEEXCHANGE_QNAME = new QName("http://www.1c.ru/ExchangeWithSites", "SiteExchange");

    static {
        URL url = null;
        WebServiceException e = null;
        url = SiteExchange.class.getClassLoader().getResource("my.wsdl");
        SITEEXCHANGE_WSDL_LOCATION = url;
        SITEEXCHANGE_EXCEPTION = e;
    }

    public SiteExchange() {
        super(__getWsdlLocation(), SITEEXCHANGE_QNAME);
    }

    public SiteExchange(WebServiceFeature... features) {
        super(__getWsdlLocation(), SITEEXCHANGE_QNAME, features);
    }

    public SiteExchange(URL wsdlLocation) {
        super(wsdlLocation, SITEEXCHANGE_QNAME);
    }

    public SiteExchange(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SITEEXCHANGE_QNAME, features);
    }

    public SiteExchange(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SiteExchange(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SiteExchangePortType
     */
    @WebEndpoint(name = "SiteExchangeSoap")
    public SiteExchangePortType getSiteExchangeSoap() {
        return super.getPort(new QName("http://www.1c.ru/ExchangeWithSites", "SiteExchangeSoap"), SiteExchangePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SiteExchangePortType
     */
    @WebEndpoint(name = "SiteExchangeSoap")
    public SiteExchangePortType getSiteExchangeSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.1c.ru/ExchangeWithSites", "SiteExchangeSoap"), SiteExchangePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SITEEXCHANGE_EXCEPTION!= null) {
            throw SITEEXCHANGE_EXCEPTION;
        }
        return SITEEXCHANGE_WSDL_LOCATION;
    }

}
